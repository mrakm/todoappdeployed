{"version":3,"sources":["components/Modal.js","components/Form.js","components/DeleteConfirmation.js","assets/icons/edit.svg","assets/icons/delete.svg","assets/icons/shorticon.svg","components/Taskbtn.js","components/Task.js","components/Tabs.js","components/GroupBy.js","components/Search.js","components/AddTaskButton.js","App.js","serviceWorker.js","redux/action.js","redux/reducer.js","redux/store.js","index.js"],"names":["Modal","props","className","style","isshow","display","tabIndex","role","title","cursor","onClick","handleModal","content","Form","todoListLength","useSelector","state","todoList","length","useState","summary","setSummary","description","setDescription","dueDate","setDueDate","priority","setPriority","useEffect","selectedTodo","dispatch","useDispatch","handleChange","event","target","id","value","onSubmit","preventDefault","today","Date","todo","createdAt","getFullYear","getMonth","getDate","currentState","type","payload","saveTodo","htmlFor","aria-describedby","placeholder","onChange","required","readOnly","isReadOnly","maxLength","minLength","aria-label","disabled","data-dismiss","DeleteConfirmation","Taskbtn","sortList","paddingTop","paddingBottom","src","shortion","height","Tasks","todos","groupBy","searchedValue","filteredList","filteredData","sortBySummary","setSortBySummary","sortByPriotiy","setSortByPriority","sortByCreatedOn","setSortByCreatedOn","sortByDueDate","setSortByDueDate","isOpenFormModal","setIsOpenFormModal","isOpenDeleteModal","setIsOpenDeleteModal","setSelectedTodo","setReadOnly","selectedTab","filter","renderPriority","priotiy","isAsscending","handleFormModal","handleDeleteModal","getSelectedTodo","handleReadOnly","changeTodoState","stopPropagation","mystyle","textDecoration","overflowX","groupedTodo","groupByTodo","reduce","total","current","push","Object","create","keys","forEach","x","createGroupBy","map","groupName","colSpan","editIcon","backgroundColor","deleteIcon","renderGroupByList","data-toggle","data-target","renderList","Tabs","tabnum","setTab","tabChangeHandler","e","Task","GroupBy","defaultValue","Search","AddTaskButton","App","isOpenModal","setIsOpenModal","maxWidth","padding","Boolean","window","location","hostname","match","TodoActions","ADD_TODO","DELETE_TODO","UPDATE_TODO","CHANGE_TODO_STATE","SET_GROUP_BY","SET_SELECTED_TAB","SET_MODAL_TITLE","SORT_BY_CREATEDAT","SORT_BY_PRIORITY","SORT_BY_DUE_DATE","SORT_BY_SUMMARY","SEARCH","initalState","TodoReducer","action","index","findIndex","searchedResult","toLowerCase","includes","slice","sort","a","b","localeCompare","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dfc8be11.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    \r\n      \r\n      \r\n\r\n\r\n      <div className=\"modal  fade show\" style={props.isshow?{display:'block'}:{}} tabIndex={-1} role=\"dialog\" >\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h3 className=\"modal-title\">{props.title}</h3>\r\n            <span  className=\"close\" style={{cursor:'pointer'}} onClick={() => props.handleModal()} >\r\n              <span >×</span>\r\n            </span>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          {props.content}\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n   </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Form = (props) => {\r\n  const todoListLength = useSelector((state) => state.todoList.length); \r\n  const [summary, setSummary] = useState(\"\"); \r\n  const [description, setDescription] = useState(\"\"); \r\n  const [dueDate, setDueDate] = useState(\"\"); \r\n  const [priority, setPriority] = useState(\"\"); \r\n  useEffect(() => {\r\n    setSummary(props?.selectedTodo?.title || \"\");\r\n    setDescription(props?.selectedTodo?.description || \"\");\r\n    setDueDate(props?.selectedTodo?.dueDate || \"\");\r\n    setPriority(props?.selectedTodo?.priority || \"1\");\r\n  }, [props]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.target.id) {\r\n      case \"summary\": {\r\n        setSummary(event.target.value);\r\n        break;\r\n      }\r\n      case \"description\": {\r\n        setDescription(event.target.value);\r\n        break;\r\n      }\r\n      case \"dueDate\": {\r\n        setDueDate(event.target.value);\r\n        break;\r\n      }\r\n      case \"priority\": {\r\n        setPriority(event.target.value);\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n \r\n  const saveTodo = (event) => {\r\n    event.preventDefault();\r\n    let today = new Date();\r\n    let todo = {\r\n      id: props?.selectedTodo?.id || todoListLength + 1,\r\n      title: summary,\r\n      description: description,\r\n      createdAt: props?.selectedTodo?.createdAt || `${today.getFullYear()}-${today.getMonth()+1}-${today.getDate()}`, \r\n      dueDate: dueDate,\r\n      priority: priority,\r\n      currentState: props?.selectedTodo?.currentState || false, \r\n    };\r\n    props.selectedTodo\r\n      ? dispatch({\r\n          type: \"UPDATE_TODO\",\r\n          payload: todo,\r\n        })\r\n      : dispatch({\r\n          type: \"ADD_TODO\",\r\n          payload: todo,\r\n        });    \r\n    props.handleModal(); \r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={(event) => saveTodo(event)}>\r\n        <label htmlFor=\"summary\">Summary</label>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"summary\"\r\n            aria-describedby=\"summary\"\r\n            placeholder=\"summary\"\r\n            onChange={handleChange}\r\n            value={summary}\r\n            required\r\n            readOnly={props.isReadOnly}\r\n            maxLength=\"140\"\r\n            minLength=\"10\"\r\n          />\r\n        </div>\r\n        <label htmlFor=\"Description\">Description</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          aria-label=\"With textarea\"\r\n          placeholder=\"Description\"\r\n          id=\"description\"\r\n          onChange={handleChange}\r\n          value={description}\r\n          required\r\n          readOnly={props.isReadOnly}\r\n          maxLength=\"500\"\r\n          minLength=\"10\"\r\n        ></textarea>\r\n        <div className=\"row\">\r\n          <div className='col-4'>\r\n                <div className=\"form-label\">\r\n                          <label >Due Date</label>\r\n                          <div className=\"input-group mb-3\">\r\n                            <input\r\n                              type=\"date\"\r\n                              className=\"form-control\"\r\n                              id=\"dueDate\"\r\n                              aria-describedby=\"Date\"\r\n                              placeholder=\"Date\"\r\n                              onChange={handleChange}\r\n                              value={dueDate}\r\n                              readOnly={props.isReadOnly}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n          </div>\r\n                  \r\n        <div className=\"col-8\">\r\n              <div className=\"form-label\">\r\n                  <label >Priority</label>\r\n                  <select\r\n                    className=\"form-select\"\r\n                    id=\"priority\"\r\n                    onChange={handleChange}\r\n                    value={priority}\r\n                    disabled={props.isReadOnly}\r\n                  >\r\n                    <option value=\"1\">None</option>\r\n                    <option value=\"2\">Low</option>\r\n                    <option value=\"3\">Medium</option>\r\n                    <option value=\"4\">High</option>\r\n                  </select>\r\n                </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            data-dismiss=\"modal\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => props.handleModal()}\r\n          >\r\n            Cancel\r\n          </button>\r\n          {!props.isReadOnly ? (\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Save\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst DeleteConfirmation = (props) => {\r\n  const dispatch = useDispatch();\r\n  const deleteTodo = () => {\r\n    dispatch({\r\n      type: \"DELETE_TODO\",\r\n      payload: props.todo,\r\n    });\r\n    props.handleModal(); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"l\">\r\n        <span className=\"form-label\">Summary:fdfdfdf</span>\r\n        <span className=\"form-control\">{props?.todo?.title}</span>\r\n      </div>\r\n      <div >\r\n        <span className=\"form-label\">Description:</span>\r\n        <span className=\"form-control\">{props?.todo?.description}</span>\r\n      </div>\r\n      <div >\r\n        <span className=\"form-label\">Due Date:</span>\r\n        <span className=\"form-control\">{props?.todo?.dueDate}</span>\r\n      </div>\r\n      <div >\r\n        <span className=\"form-label\">Created On :</span>\r\n        <span className=\"form-control\">{props?.todo?.createdAt}</span>\r\n      </div>\r\n      <div >\r\n        <span className=\"form-label\">Priority:</span>\r\n        <span className=\"form-control\">{props?.todo?.priority}</span>\r\n      </div>\r\n      <div >\r\n        <span className=\"form-label\">State:</span>\r\n        <span className=\"form-control\">{props?.todo?.priority === true ? \"Pending\" : \"Completed\"}</span>\r\n      </div>\r\n      <hr />\r\n      <div className=\"modal-footer\">\r\n        <span>Do you want to delete this task?</span>\r\n        <button className=\"btn btn-danger\" onClick={() => props.handleModal()}>\r\n          No\r\n        </button>\r\n        <button className=\"btn btn-success\" onClick={() => deleteTodo()}>\r\n          Yes{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmation;\r\n","export default __webpack_public_path__ + \"static/media/edit.7ba25088.svg\";","export default __webpack_public_path__ + \"static/media/delete.31fb2e77.svg\";","export default __webpack_public_path__ + \"static/media/shorticon.ef1e34e9.svg\";","import React from 'react';\r\nimport shortion from '../assets/icons/shorticon.svg';\r\n\r\nfunction Taskbtn(props) {\r\n    return (\r\n        <div className=\"d-flex justify-content-between\" >\r\n                <span  >{props.title}</span>\r\n                <span\r\n                  onClick={() => props.sortList()}\r\n                  className=\"btn btn-primary\"\r\n                  style={{paddingTop:\"3px\",paddingBottom:\"3px\"}}\r\n                >\r\n                  <img src={shortion}  style={{height:\"10px\"}}/>\r\n\r\n                </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Taskbtn;","import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport Form from \"./Form\";\r\nimport DeleteConfirmation from \"./DeleteConfirmation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport editIcon from '../assets/icons/edit.svg';\r\nimport deleteIcon from '../assets/icons/delete.svg';\r\nimport Taskbtn from './Taskbtn';\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n  let todos = useSelector((state) => state.todoList); \r\n  const groupBy = useSelector((state) => state.groupBy); \r\n  const searchedValue = useSelector((state) => state.searchedValue); \r\n  let filteredList = useSelector((state) => state.filteredData); \r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [sortBySummary, setSortBySummary] = useState(); \r\n  const [sortByPriotiy, setSortByPriority] = useState(); \r\n  const [sortByCreatedOn, setSortByCreatedOn] = useState(); \r\n  const [sortByDueDate, setSortByDueDate] = useState();\r\n  const [isOpenFormModal, setIsOpenFormModal] = useState(false); \r\n  const [isOpenDeleteModal, setIsOpenDeleteModal] = useState(false); \r\n  const [selectedTodo, setSelectedTodo] = useState(false); \r\n  const [readOnly, setReadOnly] = useState(false); \r\n\r\n \r\n  if (props.selectedTab === \"Pending\") {\r\n    searchedValue\r\n      ? (filteredList = filteredList.filter(\r\n          (todo) => todo.currentState === false\r\n        ))\r\n      : (todos = todos.filter((todo) => todo.currentState === false));\r\n  } else if (props.selectedTab === \"Completed\") {\r\n    searchedValue\r\n      ? (filteredList = filteredList.filter(\r\n          (todo) => todo.currentState === true\r\n        ))\r\n      : (todos = todos.filter((todo) => todo.currentState === true));\r\n  }\r\n\r\n \r\n  const renderPriority = (priotiy) => {\r\n    switch (priotiy) {\r\n      case \"1\": {\r\n        return \"None\";\r\n      }\r\n      case \"2\": {\r\n        return \"Low\";\r\n      }\r\n      case \"3\": {\r\n        return \"Medium\";\r\n      }\r\n      case \"4\": {\r\n        return \"High\";\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n \r\n  const sortList = (type) => {\r\n    switch (type) {\r\n      case \"SORT_BY_SUMMARY\": {\r\n        setSortBySummary(!sortBySummary);\r\n        dispatch({\r\n          type: type,\r\n          payload: { isAsscending: sortBySummary },\r\n        });\r\n        break;\r\n      }\r\n      case \"SORT_BY_PRIORITY\": {\r\n        setSortByPriority(!sortByPriotiy);\r\n        dispatch({\r\n          type: type,\r\n          payload: { isAsscending: sortByPriotiy },\r\n        });\r\n        break;\r\n      }\r\n      case \"SORT_BY_CREATEDAT\": {\r\n        setSortByCreatedOn(!sortByCreatedOn);\r\n        dispatch({\r\n          type: type,\r\n          payload: { isAsscending: sortByCreatedOn },\r\n        });\r\n        break;\r\n      }\r\n\r\n      case \"SORT_BY_DUE_DATE\": {\r\n        setSortByDueDate(!sortByDueDate);\r\n        dispatch({\r\n          type: type,\r\n          payload: { isAsscending: sortByDueDate },\r\n        });\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  \r\n  const handleFormModal = () => {\r\n    setIsOpenFormModal(!isOpenFormModal);\r\n  };\r\n\r\n  const handleDeleteModal = () => {\r\n    setIsOpenDeleteModal(!isOpenDeleteModal);\r\n  };\r\n\r\n  \r\n  const getSelectedTodo = (todo) => {\r\n    setSelectedTodo(todo);\r\n  };\r\n\r\n  const handleReadOnly = (isReadOnly) => {\r\n    setReadOnly(isReadOnly);\r\n  };\r\n\r\n \r\n\r\n  const changeTodoState = (todo, event) => {\r\n    event.stopPropagation();\r\n    dispatch({\r\n      type: \"CHANGE_TODO_STATE\",\r\n      payload: todo.id,\r\n    });\r\n  };\r\n  const mystyle = {\r\n    textDecoration: \"lineThrough\"\r\n  };\r\n  \r\n  const createGroupBy = () => {\r\n    let todoList = searchedValue ? filteredList : todos;\r\n    let groupByTodo = todoList.reduce((total, current) => {\r\n      total[current[groupBy]] = total[current[groupBy]] || [];\r\n      total[current[groupBy]].push(current);\r\n      return total;\r\n    }, Object.create(null));\r\n\r\n  \r\n    if (groupBy === \"priority\") {\r\n      Object.keys(groupByTodo).forEach((x) => {\r\n        groupByTodo[renderPriority(x)] = groupByTodo[x];\r\n        delete groupByTodo[x];\r\n      });\r\n    } \r\n    else if (groupBy === \"currentState\") {\r\n      Object.keys(groupByTodo).forEach((x) => {\r\n        let state = x !== \"true\" ? \"Pending\" : \"Completed\";\r\n        groupByTodo[state] = groupByTodo[x];\r\n        delete groupByTodo[x];\r\n      });\r\n    }\r\n    return groupByTodo;\r\n  };\r\n\r\n \r\n  const renderGroupByList = () => {\r\n    let groupedTodo = createGroupBy();\r\n    return (\r\n      <>\r\n        {Object.keys(groupedTodo).map((groupName) => (\r\n          <tbody key={groupName}>\r\n            <tr>\r\n              <td colSpan=\"5\"  className=\"text-center\">\r\n                {\" \"}\r\n               <u> {groupName}</u>\r\n              </td>\r\n            </tr>\r\n            {groupedTodo[groupName].map((todo) => (\r\n              <tr\r\n                className={todo.currentState ? mystyle : null}\r\n                key={todo.id}\r\n                onClick={() => {\r\n                  handleFormModal();\r\n                  getSelectedTodo(todo);\r\n                  handleReadOnly(true);\r\n                }}\r\n              >\r\n                <td>{todo.title}</td>\r\n                <td>{renderPriority(todo.priority)}</td>\r\n                <td>{todo.createdAt}</td>\r\n                <td>{todo.dueDate}</td>\r\n                <td className=\"center\">\r\n                  <span\r\n                    className=\"btn btn-primary\"\r\n                   \r\n                    onClick={(event) => {\r\n                      event.stopPropagation();\r\n                      handleFormModal();\r\n                      getSelectedTodo(todo);\r\n                      handleReadOnly(false);\r\n                    }}\r\n                  >\r\n                   <img src={editIcon}  style={{height:\"10px\"}}/>\r\n                  </span>\r\n                  {!todo.currentState ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-success\"\r\n                      onClick={(event) => changeTodoState(todo, event)}\r\n                    >\r\n                      Done\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-info\"\r\n                      onClick={(event) => changeTodoState(todo, event)}\r\n                    >\r\n                      Re-Open\r\n                    </button>\r\n                  )}\r\n                  <span\r\n                    onClick={(event) => {\r\n                      event.stopPropagation();\r\n                      handleDeleteModal();\r\n                      getSelectedTodo(todo);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                    style={{ backgroundColor: \"red\" }}\r\n                  >\r\n                  <img src={deleteIcon}  style={{height:\"10px\"}}/>\r\n\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderList = () => {\r\n    const todoList = searchedValue ? filteredList : todos;\r\n    return (\r\n      <tbody>\r\n        {todoList.map((todo) => (\r\n          <tr\r\n            className={todo.currentState ? mystyle : null}\r\n            key={todo.id}\r\n            onClick={() => {\r\n              handleFormModal();\r\n              getSelectedTodo(todo);\r\n              handleReadOnly(true);\r\n            }}\r\n          >\r\n            <td>{todo.title}</td>\r\n            <td>{renderPriority(todo.priority)}</td>\r\n            <td>{todo.createdAt}</td>\r\n            <td>{todo.dueDate}</td>\r\n            <td className=\"center\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#exampleModal\"\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  handleFormModal();\r\n                  getSelectedTodo(todo);\r\n                  handleReadOnly(false);\r\n                }}\r\n              >\r\n               <img src={editIcon}  style={{height:\"10px\"}}/>\r\n\r\n              </button>\r\n              {!todo.currentState ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={(event) => changeTodoState(todo, event)}\r\n                >\r\n                  Done\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-info\"\r\n                  onClick={(event) => changeTodoState(todo, event)}\r\n                >\r\n                  Re-Open\r\n                </button>\r\n              )}\r\n              <button\r\n                onClick={(event) => {\r\n                  handleDeleteModal();\r\n                  getSelectedTodo(todo);\r\n                }}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                <img src={deleteIcon}  style={{height:\"10px\"}}/>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={{overflowX:'auto'}}>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th >\r\n              <Taskbtn title=\"Summary\"  sortList={() => sortList(\"SORT_BY_SUMMARY\")}/>\r\n            </th>\r\n            <th >\r\n            <Taskbtn title=\"Priority\"  sortList={() => sortList(\"SORT_BY_PRIORITY\")}/>\r\n            </th>\r\n            <th >\r\n            <Taskbtn title=\"Created On\"  sortList={() => sortList(\"SORT_BY_CREATEDAT\")}/>\r\n            </th>\r\n            <th >\r\n            <Taskbtn title=\"Due By\"  sortList={() => sortList(\"SORT_BY_DUE_DATE\")}/>\r\n            </th>\r\n            <th >\r\n              <div >\r\n                <span >Actions</span>\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        {groupBy !== \"none\" ? renderGroupByList() : renderList()}\r\n      </table>\r\n      \r\n\r\n      {isOpenFormModal && selectedTodo && !readOnly ? (\r\n        <Modal\r\n        \r\n          content={\r\n            <Form\r\n              isReadOnly={readOnly}\r\n              selectedTodo={selectedTodo}\r\n              handleModal={handleFormModal}\r\n            ></Form>\r\n          }\r\n          handleModal={handleFormModal}\r\n          isshow={true}\r\n          title={readOnly ? \"Todo\" : \"Edit Todo\"}\r\n        />\r\n      ) : null}\r\n\r\n      {isOpenDeleteModal && selectedTodo ? (\r\n        <Modal\r\n        isshow={isOpenDeleteModal}\r\n        \r\n          content={\r\n            <DeleteConfirmation\r\n              todo={selectedTodo}\r\n              handleModal={handleDeleteModal}\r\n            ></DeleteConfirmation>\r\n          }\r\n          handleModal={handleDeleteModal}\r\n          title={\"Delete Todo\"}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, {useState} from \"react\";\r\nimport Tasks from \"./Task\";\r\n\r\nconst Tabs = (props) => {\r\n  const [tabnum, setTab] = useState(\"all\");\r\n  function tabChangeHandler(e){\r\n    setTab(e);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <nav>\r\n        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n          <a\r\n            className={tabnum==\"all\" ? 'nav-link active': \"nav-link\"}\r\n            onClick={()=>{tabChangeHandler(\"all\")}}\r\n          >\r\n            All\r\n          </a>\r\n          <a\r\n            className={tabnum==\"pending\" ? 'nav-link active': \"nav-link\"}\r\n            onClick={()=>{tabChangeHandler(\"pending\")}}\r\n          >\r\n            Pending\r\n          </a>\r\n          <a\r\n            className={tabnum==\"completed\" ? 'nav-link active': \"nav-link\"}\r\n            onClick={()=>{tabChangeHandler(\"completed\")}}\r\n          >\r\n            Completed\r\n          </a>\r\n        </div>\r\n      </nav>\r\n      <div className=\"tab-content\" id=\"nav-tabContent\">\r\n        <div\r\n          className={tabnum==\"all\" ? 'tab-pane fade show active': \"tab-pane fade d-none\"}\r\n        >\r\n          <Tasks selectedTab=\"All\"></Tasks>\r\n        </div>\r\n        <div\r\n           className={tabnum==\"pending\" ? 'tab-pane fade show active': \"tab-pane fade d-none\"}\r\n        >\r\n          <Tasks selectedTab=\"Pending\"></Tasks>\r\n        </div>\r\n        <div\r\n           className={tabnum==\"completed\" ? 'tab-pane fade show active': \"tab-pane fade d-none\"}\r\n        >\r\n          <Tasks selectedTab=\"Completed\"></Tasks>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst GroupBy = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const setGroupBy = (groupBy) => {\r\n    dispatch({\r\n      type: \"SET_GROUP_BY\",\r\n      payload: groupBy,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <label className=\"form-label\" >Group By</label>\r\n\r\n      <select\r\n        onChange={(event) => setGroupBy(event.target.value)}\r\n        className=\"form-select\"\r\n        id=\"inputGroupSelect01\"\r\n        defaultValue=\"None\"\r\n      >\r\n        <option value=\"none\">None</option>\r\n        <option value=\"createdAt\">Created On</option>\r\n        <option value=\"currentState\">Pending On</option>\r\n        <option value=\"priority\">Priority</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupBy;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst Search = (props) => {\r\n  const dispatch = useDispatch();\r\n  const searchedValue = useSelector((state) => state.searchedValue); \r\n  return (\r\n    <div >\r\n      <label className=\"form-label\">Search</label>\r\n      \r\n        <input\r\n          value={searchedValue}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"basic-search\"\r\n          aria-describedby=\"Search Task\"\r\n          placeholder=\"Search Task\"\r\n          onChange={(e) => {\r\n          \r\n            dispatch({\r\n              type: \"SEARCH\",\r\n              payload: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\n\r\n\r\n\r\nconst AddTaskButton = (props) => {\r\n\r\n  return  (\r\n    <div\r\n    className=\"btn btn-primary rounded-circle\"\r\n       onClick={() => props.handleModal()}\r\n      data-toggle=\"modal\"\r\n      data-target=\"#exampleModal\"\r\n    >\r\n      +\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskButton;\r\n","import React,{useState} from \"react\";\r\nimport Tabs from \"./components/Tabs\";\r\nimport GroupBy from \"./components/GroupBy\";\r\nimport Serach from \"./components/Search\";\r\nimport AddTaskButton from \"./components/AddTaskButton\";\r\nimport Modal from \"./components/Modal\";\r\nimport Form from \"./components/Form\";\r\nimport './assets/css/bootstrap.min.css'\r\n\r\n\r\nconst App = () => {\r\n  const [isOpenModal, setIsOpenModal] = useState(false); \r\n  const handleModal = () => {\r\n    setIsOpenModal(!isOpenModal);\r\n  };\r\n  return (\r\n    <div className=\"container\" style={{maxWidth:\"1000px\"}}>\r\n        \r\n\r\n        <nav className=\"navbar navbar-light bg-white\">\r\n        <div className=\"container fs-1\" style={{padding: '0px'}}>\r\n          <a className=\"navbar-brand\"><h1>ToDo App</h1></a>\r\n          <div className=\"d-flex\">\r\n          <AddTaskButton handleModal={()=>handleModal()}/>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n\r\n\r\n      <div className=\"row\">\r\n        <div className='col-2'>\r\n        <GroupBy></GroupBy>\r\n        </div>\r\n        <div className='col-10'>\r\n        <Serach></Serach>\r\n        </div>\r\n      </div>\r\n      <Tabs></Tabs>\r\n     \r\n    <Modal\r\n     isshow={isOpenModal} \r\n     handleModal={() => handleModal()}\r\n      content={<Form  handleModal={()=> handleModal()}></Form>}\r\n      \r\n      title={\"Add Todo\"}\r\n      \r\n    />\r\n  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const ADD_TODO = \"ADD_TODO\";\r\nconst DELETE_TODO = \"DELETE_TODO\";\r\nconst UPDATE_TODO = \"UPDATE_TODO\";\r\nconst CHANGE_TODO_STATE = \"CHANGE_TODO_STATE\";\r\nconst SET_GROUP_BY = \"SET_GROUP_BY\";\r\nconst SET_SELECTED_TAB = \"SET_SELECTED_TAB\";\r\nconst SET_MODAL_TITLE = \"SET_MODAL_TITLE\";\r\nconst SORT_BY_CREATEDAT = \"SORT_BY_CREATEDAT\";\r\nconst SORT_BY_PRIORITY = \"SORT_BY_PRIORITY\";\r\nconst SORT_BY_DUE_DATE = \"SORT_BY_DUE_DATE\";\r\nconst SORT_BY_SUMMARY = \"SORT_BY_SUMMARY\";\r\nconst SEARCH = \"SEARCH\";\r\n\r\nconst TodoActions = {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  UPDATE_TODO,\r\n  CHANGE_TODO_STATE,\r\n  SET_GROUP_BY,\r\n  SET_SELECTED_TAB,\r\n  SET_MODAL_TITLE,\r\n  SORT_BY_CREATEDAT,\r\n  SORT_BY_PRIORITY,\r\n  SORT_BY_DUE_DATE,\r\n  SORT_BY_SUMMARY,\r\n  SEARCH,\r\n};\r\n\r\nexport default TodoActions;\r\n","import TodoActions from \"./action\";\r\n\r\nlet initalState = {\r\n  todoList: [\r\n    {\r\n      id:1,\r\n      title: \"Lorem Ipsum is simply\",\r\n      description: \"khejhfbjhfbejhd jbfsbjhfebjhfekde\",\r\n      createdAt: \"2021-03-12\",\r\n      dueDate: \"2021-03-13\",\r\n      priority: \"1\",\r\n      currentState: true,\r\n    },\r\n    {\r\n      id:2,\r\n      title: \"0 years old. Richard McCl\",\r\n      description: \"rs, as opposed to using 'Content here, content here', making it look like readable En\",\r\n      createdAt: \"2021-03-12\",\r\n      dueDate: \"2021-03-13\",\r\n      priority: \"2\",\r\n      currentState: false,\r\n    },\r\n    {\r\n      id:3,\r\n      title: \"a Latin professor at Hampden-Sydn\",\r\n      description: \" a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richar\",\r\n      createdAt: \"2021-03-12\",\r\n      dueDate: \"2021-03-13\",\r\n      priority: \"3\",\r\n      currentState: true,\r\n    }\r\n    \r\n  ],\r\n  groupBy: \"none\",\r\n  filteredData: [],\r\n  searchedValue:'',\r\n};\r\n\r\nfunction TodoReducer(state = initalState, action) {\r\n  switch (action.type) {\r\n    case TodoActions.ADD_TODO: {\r\n      return {\r\n        ...state,\r\n        todoList: [action.payload, ...state.todoList],\r\n      };\r\n    }\r\n    case TodoActions.UPDATE_TODO: {\r\n      let index = state.todoList.findIndex( x => x.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.todoList[index] = action.payload;\r\n      }\r\n      return state;\r\n    }\r\n    case TodoActions.DELETE_TODO: {\r\n      return{\r\n        ...state,\r\n        todoList: state.todoList.filter((x) => x !== action.payload)\r\n      }\r\n    }\r\n    case TodoActions.CHANGE_TODO_STATE:{\r\n      return{\r\n        ...state,\r\n        todoList: state.todoList.map((x) => {\r\n          if(x.id === action.payload)  x.currentState = !x.currentState;\r\n\r\n          return x;\r\n        })\r\n      }\r\n    }\r\n    case TodoActions.SET_GROUP_BY: {\r\n      return{\r\n        ...state,\r\n        groupBy:action.payload\r\n      }\r\n    }\r\n    case TodoActions.SEARCH: {\r\n      let searchedValue = action.payload;\r\n      let searchedResult = state.todoList.filter((todo) => todo.title.toLowerCase().includes(searchedValue.toLowerCase()));\r\n      return{\r\n        ...state,\r\n        filteredData:searchedResult,\r\n        searchedValue\r\n      }\r\n    }\r\n    case TodoActions.SORT_BY_SUMMARY: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.slice().sort((a, b) => {\r\n          if (action.payload.isAsscending) {\r\n            return \"\" + a.title.localeCompare(b.title);\r\n          }\r\n          return \"\" + b.title.localeCompare(a.title);\r\n        }),\r\n      };\r\n    }\r\n    case TodoActions.SORT_BY_PRIORITY: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.slice().sort((a, b) => {\r\n          if (action.payload.isAsscending) {\r\n            return a.priority - b.priority;\r\n          }\r\n          return b.priority - a.priority;\r\n        }),\r\n      };\r\n    }\r\n    case TodoActions.SORT_BY_CREATEDAT: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.slice().sort((a, b) => {\r\n          if (action.payload.isAsscending) {\r\n            return new Date(a.createdAt) - new Date(b.createdAt);\r\n          }\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        }),\r\n      };\r\n    }\r\n    case TodoActions.SORT_BY_DUE_DATE: {\r\n      return {\r\n        ...state,\r\n        todoList: state.todoList.slice().sort((a, b) => {\r\n          if (action.payload.isAsscending) {\r\n            return new Date(a.dueDate) - new Date(b.dueDate);\r\n          }\r\n          return new Date(b.dueDate) - new Date(a.dueDate);\r\n        }),\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default TodoReducer;\r\n","import { createStore } from 'redux';\r\nimport TodoReducer from './reducer';\r\n\r\nconst store = createStore(TodoReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}